{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Hi there \ud83d\udd96! \u00b6 My name is \ud83d\udc68Alejandro Piad Morffis. Here are some things about me: I live in Havana, \ud83c\udde8\ud83c\uddfaCuba, but I'm temporally located in Alicante, \ud83c\uddea\ud83c\uddf8Spain. I'm currently finishing a \ud83c\udf93Ph.D. in Computer Science. In my free time, I also enjoy \ud83d\udcbb coding (mostly in \ud83d\udc0dPython), \ud83c\udfaeplaying video games (sadly not much lately), and \u270f\ufe0f writing . My two passions are \ud83d\udcdateaching and \u2697\ufe0fresearching. I teach Programming, Compilers, AI, and a bunch of other stuff at the University of Havana. I also do research there, mostly on how to use artificial intelligence to better understand human languages. You can find me online on \ud83d\udde8\ufe0f Twitter , \ud83d\udcbc LinkedIn , \ud83d\ude1d Reddit and \ud83d\udcf1 Telegram . \ud83d\udc8c The best way to contact me is to mention @AlejandroPiad on Twitter. I follow very few people (only those with whom I interact frequently) but I try to reply whenever someone asks me to. Tweet to @AlejandroPiad And these are the values I stand for: \u2764\ufe0f I believe that people are generally good, and if given the chance, they will show the better parts of themselves. \u2764\ufe0f I believe people should have the chance to speak their minds, without fear to be silenced or hated for it, even if they are wrong. And they should have the option to honestly recognize their mistakes, learn from them, and be forgiven. \u2764\ufe0f I do not tolerate racism or discrimination of any kind, towards me or others around me, and I work very hard to apply those same standards to myself. \u2764\ufe0f I'm dedicated to education because I think that access to high-quality, unbiased, and free education is one of the best gifts anyone can receive, and one of the easiest ways to make people more reasonable and tolerant. \u2764\ufe0f I've been lucky to receive lots of great education from a lot of awesome teachers, to whom I'll be forever grateful. For these reasons, I share what I know for free, in the hopes someone can find it useful.","title":"Home"},{"location":"#hi-there","text":"My name is \ud83d\udc68Alejandro Piad Morffis. Here are some things about me: I live in Havana, \ud83c\udde8\ud83c\uddfaCuba, but I'm temporally located in Alicante, \ud83c\uddea\ud83c\uddf8Spain. I'm currently finishing a \ud83c\udf93Ph.D. in Computer Science. In my free time, I also enjoy \ud83d\udcbb coding (mostly in \ud83d\udc0dPython), \ud83c\udfaeplaying video games (sadly not much lately), and \u270f\ufe0f writing . My two passions are \ud83d\udcdateaching and \u2697\ufe0fresearching. I teach Programming, Compilers, AI, and a bunch of other stuff at the University of Havana. I also do research there, mostly on how to use artificial intelligence to better understand human languages. You can find me online on \ud83d\udde8\ufe0f Twitter , \ud83d\udcbc LinkedIn , \ud83d\ude1d Reddit and \ud83d\udcf1 Telegram . \ud83d\udc8c The best way to contact me is to mention @AlejandroPiad on Twitter. I follow very few people (only those with whom I interact frequently) but I try to reply whenever someone asks me to. Tweet to @AlejandroPiad And these are the values I stand for: \u2764\ufe0f I believe that people are generally good, and if given the chance, they will show the better parts of themselves. \u2764\ufe0f I believe people should have the chance to speak their minds, without fear to be silenced or hated for it, even if they are wrong. And they should have the option to honestly recognize their mistakes, learn from them, and be forgiven. \u2764\ufe0f I do not tolerate racism or discrimination of any kind, towards me or others around me, and I work very hard to apply those same standards to myself. \u2764\ufe0f I'm dedicated to education because I think that access to high-quality, unbiased, and free education is one of the best gifts anyone can receive, and one of the easiest ways to make people more reasonable and tolerant. \u2764\ufe0f I've been lucky to receive lots of great education from a lot of awesome teachers, to whom I'll be forever grateful. For these reasons, I share what I know for free, in the hopes someone can find it useful.","title":"Hi there \ud83d\udd96!"},{"location":"about/projects/","text":"Open Source Projects \u00b6 Here are some of the most interesting projects I'm working on: Using the amazing github-readme-stats AutoGOAL Tweet #autogoal \u00b6 AutoGOAL is a Python framework for Automated Machine Learning that I and a few other colleagues are building. It's the main research result of my wife's Ph.D. , and it is a team project in which I'm a proud contributor and evangelist. Auditorium Tweet #auditorium \u00b6 Auditorium is my attempt to bring together Python with HTML for interactive slideshows. It is based on reveal.js and allows creating a slideshow with pure Python code, including some interactive stuff like rendering graphs on the fly and running animations. Illiterate Tweet #illiterate \u00b6 Illiterate is my take at the dilemma of code comments vs documentation. The idea stems from my love for the Literate Programming paradigm, but with a pragmatic twist that doesn't require any external tooling but rather relies on discipline and conventions.","title":"Open Source"},{"location":"about/projects/#open-source-projects","text":"Here are some of the most interesting projects I'm working on: Using the amazing github-readme-stats","title":"Open Source Projects"},{"location":"about/projects/#autogoal-tweet-autogoal","text":"AutoGOAL is a Python framework for Automated Machine Learning that I and a few other colleagues are building. It's the main research result of my wife's Ph.D. , and it is a team project in which I'm a proud contributor and evangelist.","title":"AutoGOAL Tweet #autogoal"},{"location":"about/projects/#auditorium-tweet-auditorium","text":"Auditorium is my attempt to bring together Python with HTML for interactive slideshows. It is based on reveal.js and allows creating a slideshow with pure Python code, including some interactive stuff like rendering graphs on the fly and running animations.","title":"Auditorium Tweet #auditorium"},{"location":"about/projects/#illiterate-tweet-illiterate","text":"Illiterate is my take at the dilemma of code comments vs documentation. The idea stems from my love for the Literate Programming paradigm, but with a pragmatic twist that doesn't require any external tooling but rather relies on discipline and conventions.","title":"Illiterate Tweet #illiterate"},{"location":"essays/","text":"This is a collection of some things I've written over the years. Instead of blog posts, I consider them kind of short essays. These are varied in format and content, some are more technical, some are more philosophical, others a bit more pragmatic. I honestly don't like to write tutorial-like articles. I've tried a bunch of times and I've failed (though I might try again in the future). For now, I think there are enough amazing people out there doing it much better than I. Hence, these short essays are not about specific technologies or how-to guides. I try to select topics I'm passionate about and that I think have a chance to remain relevant for a longer time. If there is a particular topic you think I might have something interesting to say about, feel free to contact me on Twitter . I've also recently started to post short, actionable stuff in the form of tweetstorm . These are threads of 10-20 tweets that I'm also collecting here for future reference.","title":"About essays"},{"location":"essays/teaching/","text":"Tweet When people ask me who I am, the short answer is \"a teacher\", even though I do a bunch of other stuff. This is why. I didn't know I wanted to be a college teacher until about 3rd year of my major at the University of Havana. Even then, the thought came slowly, something like \"yeah teaching could nice, but if I have to do something completely different, I may as well enjoy that\". By the end of the 5th year (it was a 5-years major back then) I was sure there was nothing else that could fill me up. I've been in front of a classroom for a few years now, at least twice a week one semester a year, ever since my first time back in 2009. And I've loved every minute of it. Students are the same everywhere. They have hopes, dreams, and a lot of misconceptions. They come thinking they want to be something (an engineer, a computer scientist, a journalist, a lawyer, ...), because they think that choice will lead them to do something (solve problems, work at a large company, travel the world, ...). So they focus on that search: what is the something they want to do, hence, the something they want to be? My main task is to try and convince them otherwise. The search is not about a something . It's about a someone . You need to come to college to discover who you want to be, not what you want to be. And if this sounds a bit philosophical (or plain crap), then I'm (un)apologetically sorry. Engineer, computer scientist, lawyer, all of those are just labels that somehow try to average over the set of things that people who label themselves that way like to do. Don't get me wrong, labels are important. They help us organize and understand the world. But if there is one occasion when you don't want a simple label to smooth away all the tiny details, is when choosing (or searching) what you want to do for life, or even better, who you want to be for life. So when people ask me \"are you an engineer, a scientist, or a philosopher?\" I answer yes. I'm mostly a scientist, because I do more research than the average engineer; but I'm also an engineer, because I solve more problems than the average philosopher; and, I'm also a philosopher, because I like to think more about the implications of my decisions than the average scientist. I'm also a lot of other things, if you ask. It's not that I'm somehow \"better\" than any of these individual labels, it's simply that I choose to be my own brew of these \"things\", taking from each what I like and dumping what I don't. To a simple question ( what are you?) I can only give a simple answer (yes). If you want the details, you'll have to ask a deeper question: who are you? My first day in class every year, I like to throw a simple question at my students: who do you want to be? Most of them answer with a combination of whats. I want to be this or I want to do that. Over the year, some start to discover they want to be someone , not just something. They start dumping the labels and start answering to this question not with things (I want to be a programmer) but with choices (I want to solve this specific problem, I want to cure this disease, I want to create this gadget). Those choices become the who they strive for. Eventually, even if unconsciously, most reach this state. A tiny fraction of them will consciously acknowledge it. And an even smaller fraction, maybe one or two a year, sometimes none, will come one day and say to me something like \"thank you for helping me find my who\", even if not with those exact words. And that's it. That small moment when I realize someone found its own best version, and I had a tiny bit of influence. That's all the payment I need. That's why I love teaching. \ud83d\udde8\ufe0f If you want to discuss this topic with me, give me a shout in this tweet. I've talked about how much I love teaching a bunch of times before. Here is a short essay where I try to answer why: https://t.co/u7fR5nXQli If you have some time to read it, and want to discuss about it, just reply to this tweet or @ me. I'm always open for a good talk. \u2014 Alejandro Piad-Morffis (@AlejandroPiad) September 18, 2020","title":"Why I love teaching"},{"location":"essays/team-playing/","text":"Tweet Modern higher education is all about competences and skills. In the process, we are losing some very bright people who just don't fit this narrow-minded model of professionalism. Modern education started with the Industrial Revolution and the need to graduate tons of skilled workers to carry on the same tasks over and over. Previously, education was only for the brightest and/or luckiest, and usually consisted of a very custom path through which a tutor would guide you. Nowadays in universities all around the world, we have reduced students to numbers, grades, percentages, as if we were producing computer chips or combustion engines. Efficiency is all that matters. To achieve the highest possible efficiency, all around the world we educators have become engineers of sorts. We designed what we call a \"model of the professional\", which is a set of skills and competencies that an abstract ideal professional should have. Then we designed an evaluation metric he micro-average of a ton of super-narrow scores that measure super-specific skills such as taking a derivative or coding a recursive function. Finally, we designed a pipeline that takes students on one end and produces \"professionals\" on the other end. Those \"smart\" enough to learn to beat the system get the highest grades and are stamped with an abstract generic title of Computer Scientist, Medical Doctor, Lawyer, very much like a certificate of quality in a generic bottle of wine. This system is deeply flawed, and educators all over the world know it and have been discussing it for a long time. It's hard to change for many reasons, the least of which is the lack of teachers willing to dump the generic instruction set and craft custom learning paths for their students. I think this system is based on two basic assumptions, intuitive but flawed. Changing those assumptions could shed light on ways to improve the system. The first assumption is that students are a blank slate that when fed through this generic pipeline we call higher education will be magically morphed into this generic professional we designed. This is wrong for so many reasons that is hard to acknowledge it as a basic assumption of our system. Ask any university professor and they will all tell you the same: All students are different. They all have different skills, interests and biases. They all require a different approach to get the most out of them. And almost all of them, when given the chance and the right environment, will become the best versions of themselves. Yet time and time again we treat them as generic droids on which we can dump a generic course and expect a generic performance in return. The second assumption, I think, is harder to spot, because of the way the university is disconnected from real life all around the world. We educators think that society wants this \"model of the professional\" because we think that a hospital needs 100 equally generic doctors, and a software company needs 100 equally generic programmers. However, this is also wrong at many levels. Everywhere we ask in the industry we keep hearing the same: we need unique people with unique skills that bring something new to the team. It's like trying to build an ensemble out of 100 equal models. You get much better results with a variety of approaches to the same problem, than with an array of 100 exactly equal programs. Yet we keep translating what society asks into skills and competencies. They tell us they need unique people, and we add \"uniqueness\" to the set of generic skills we want to teach with our generic college programs! So let's dump those two assumptions and acknowledge that we have a bunch of different kids with different interests and capabilities, and we need to turn them into a bunch of different professionals with different mindsets and skills. Now the question is how on earth can we do that? As engineers, we need to design a streamlined pipeline and a proper evaluation metric. And we need to do that, unfortunately, because there are so many more students than teachers that we cannot hope to be the Aristotle to each Alexander, and that's not about to change in the near future. I think one possible strategy is to focus on a single evaluation metric, and a single skill: \ud83d\udca1 Strive to transform every student into an effective team-player. Let's take it piece by piece. Every student is different, so everyone will have a different set of potential capabilities that could make them effective team-players. If we encourage those specific capabilities on each student, we are giving each one a different learning path. This one will focus on improving her analytical skills, that one will focus on improving his management skills, the other one her social skills, and so on. Each one is focusing on their own most interesting, most desirable version of themselves. On the other hand, everyone is optimizing the same metric, being a good team-player, whatever the team. Give them back to society and they will fit in the right spot. The one spot that needs that specific mindset. Almost all low-hanging fruits that a single bright person could take are already taken, the problems that are left to solve as a society are the hard problems, and they all require teamwork. The easier problems are being automated away as I type. So, I argue, the most important skill today is being an effective team-player. If we strive to turn our students into exactly that, we are giving them the best education possible, and we are giving society the best possible return on that investment. The final question is how exactly do we do that? How do we discover what makes every student unique and valuable in a team? Isn't that the same Aristotle & Alexander dilemma? I think a possible solution is simply to let each of them discover it by themselves. As educators, instead of trying to tell everyone what to do, let's focus on designing learning environments that are comfortable for every student to explore their own skills and capabilities and decide the best way to serve the team. And let's evaluate them on co-op instead of solo so that when trying to beat the system, they will effectively optimize what we, the rest of the world, need them to be good at. \ud83d\udde8\ufe0f If you want to discuss this topic, give me a shout in this tweet. There is a lot of discussion about what's wrong with modern college education and how to fix it. My take? \ud83d\udca1 Strive to transform every student into an effective team-player. Some thoughts about this topic: https://t.co/jB4cgTmhJb Let me know what you think in a reply \ud83d\udde8\ud83d\udc47... \u2014 Alejandro Piad-Morffis (@AlejandroPiad) September 19, 2020","title":"It's all about team-playing"},{"location":"tweetstorms/","text":"I recently discovered that Twitter can be an amazing place to share short, actionable pieces of content that convey one specific message. These are topics that I haven't developed enough to become an essay, and probably never will, but I still find them interesting and worthy of sharing. Not everything I write on Twitter is saved here, only those pieces of content that have enough value I think someone might be interested in bookmarking. But this content is only the tip of the iceberg, the real value is in the conversation they spark on Twitter. So, after reading them, make sure to click on the embedded tweet at the end which will take you to the thread on Twitter, and there you'll find a lot of opinions, discussion, and insights. If you want to read more thoughtful stuff, I also have some short essays where I take a longer time to explore more complex ideas.","title":"About tweetstorms"},{"location":"tweetstorms/mindblowingmonday-gan/","text":"Hey, today is #MindblowingMonday \ud83e\udd2f! A day to share with you amazing things from every corner of Computer Science. Today I want to talk about Generative Adversarial Networks \ud83d\udc47 \ud83c\udf6c But let's begin with some eye candy. Take a look at this mind-blowing 2-minute video and, if you like it, then read on, I'll tell you a couple of things about it... Generative Adversarial Networks (GAN) have taken by surprise the machine learning world with their uncanny ability to generate hyper-realistic examples of human faces, cars, landscapes, and a lot of other stuff, as you just saw. Want to know how they work? \ud83d\udc47 There are many variants, but the core idea is to have 2\ufe0f\u20e3 neural networks: \u2699\ufe0f a generator network \u2696\ufe0f a discriminator network Both networks are connected in a sort of adversarial game, where each is trying to outperform the other. \u2696\ufe0f The discriminator is a regular neural network whose job is to determine if a specific sample (say, an image of a face) is real or generated. This network's architecture depends on the classification task, as usual, e.g., lots of convolutions and pooling for images. \u2699\ufe0f The generator network is a decoder network, whose job is to transform an input of random values to whatever you want to generate. In images, for example, you'll have deconvolution layers and upsampling, i.e., the \"reverse\" of an image classification network. \ud83c\udfa9 All the magic happens in the training. You train the discriminator by alternatively showing it real and generated images, and minimizing some classification loss (e.g., binary cross-entropy). The generator is trained to try and \"fool\" the discriminator. But this is not easy, so the trick involves letting it \"see\" the discriminator loss function. \ud83d\udca1 It's like showing you my brain while you perform a magic trick, so you can understand how I can be fooled best. This is the basic idea, but the devil is in the details. Two common problems with GANs are: 1\ufe0f\u20e3 The discriminator learns much faster, so the generator never gets a chance to catch up. 2\ufe0f\u20e3 The generator gets complacent and just produces the same good examples over and over. \ud83e\udd14 Finally, beyond the technical challenges, the possibility of suddenly creating very realistic content opens a can of worms of ethical issues such as disinformation. But technology itself is neither good nor bad, it is just a tool. It's on ourselves what we do with it. As usual, if you like this topic, have any questions, or just want to discuss, reply in this thread or @ me any time. I'll be listening. This thread is available in plain format here, forever: https://apiad.net/tweetstorms/mindblowingmonday-gan/ Stay curious: \ud83c\udfa5 https://apiad.net/to/#gan-video \ud83c\udfeb https://deepgenerativemodels.github.io/ \ud83d\udcd8 https://www.manning.com/books/gans-in-action \ud83d\udcc3 https://arxiv.org/abs/1710.07035 \ud83d\udcbb https://github.com/nightrome/really-awesome-gan You can see this tweetstorm as originally posted in this Twitter thread Hey, today is #MindblowingMonday \ud83e\udd2f! A day to share with you amazing things from every corner of Computer Science. Today I want to talk about Generative Adversarial Networks \ud83d\udc47 \u2014 Alejandro Piad-Morffis (@AlejandroPiad) September 21, 2020","title":"Generative Adversarial Networks"},{"location":"tweetstorms/philosophyfriday-mary-room/","text":"Hey, today is #PhilosophyFriday \ud83e\udd14! How about discussing some philosophical aspects of Computer Science? Today I want to talk about Mary's Room \ud83d\udc47 This is a very interesting thought experiment that is related to the nature of knowledge and the difference between knowing something and knowing about something. There are many variants of the experiment, but my favorite one goes like this \ud83e\uddf5: Mary is a renowned neuroscientist who has studied everything there is to study about human vision. She understands every little bit of science regarding how light enters the eye, how it is received, and how it is processed in the brain... \ud83d\udc47 Furthermore, Mary understands perfectly all the physics of color, she can say exactly which portion of the spectrum is called \"red\", \"green\", \"blue\", or any other color you can mention... \ud83d\udc47 Even more, Mary has interviewed thousands of people, scanned their brains, measured their retinas. She understands all the physical phenomena that happen when everyone else sees a color... \ud83d\udc47 But... Mary is absolutely color blinded. She has a rare genetic disease that makes her see everything in monochrome. So, being the top researcher in the whole world regarding the human experience of color, she has never \"experienced\" color herself... \ud83d\udc47 One day, a miracle of science allows Mary to regain the ability to see color, in all its glory. And for the first time in her life, Mary looks up, and she experiences the blue sky \u2601\ufe0f! \u2753 At this point, does Mary gain any new knowledge that she didn't previously have? Think carefully. There is no right or wrong answer, just let me know at this point what do believe and, more importantly, why. Before you leave, I have a few more comments to make \ud83d\udc47 \ud83c\udd70\ufe0f If you think Mary doesn't learn anything new, then you believe in \"physicalism\": the notion that the physical world is everything there is. In particular, all human experience is ultimately caused by physics and there is nothing above it. \ud83c\udd71\ufe0f If you think there is something new she attained after experiencing color, that she couldn't possibly have known before, then you believe in the existence of \"qualia\": subjective experiences that cannot be explained or understood without experiencing them. \ud83e\udd14 Most philosophers and scientists (including computer scientists) describe themselves as physicalists or at least materialists. However, it is very hard to explain what I experience as \"being red\" or \"being cold\" or \"being painful\", without having you experience it. \"But what does this have to do with computers\", you ask? Well, if qualia exist, then it is very hard to believe in strong artificial intelligence. Since computers will not experience the world the way we do, how will you know that they know what \"pain\" or \"love\" is? And that's it. Now I just want to leave the discussion open. There is no right or wrong answer here since philosophers themselves don't even agree (this is hardly surprising, though, put N philosophers in a room and you will have N+1 opinions \ud83d\ude06). If you want to read this in a more \"classic\" format or bookmark it for later, check it out here: https://apiad.net/tweetstorms/philosophyfriday-mary-room/ You can see this tweetstorm as originally posted in this Twitter thread Hey, today is #PhilosophyFriday \ud83e\udd14! How about discussing some philosophical aspects of Computer Science? Today I want to talk about Mary's Room \ud83d\udc47 \u2014 Alejandro Piad-Morffis (@AlejandroPiad) September 18, 2020","title":"Mary's Room"},{"location":"tweetstorms/technicaltuesday-automl/","text":"Today is #TechnicalTuesday \ud83e\udd13! Let's talk about practical technologies that you can use today. In this thread I will tell you about AutoML \ud83e\uddf5\ud83d\udc47 AutoML stands for Automated Machine Learning . It encompases a bunch of technologies and paradigms to gradually automate the process of creating machine learning solutions. AutoML is about raising the abstraction level in ML and reducing the grunt work. \u2753 What can AutoML do today? Getting a machine learning solution to work takes a few steps: 1\ufe0f\u20e3 collecting data 2\ufe0f\u20e3 sanitizing that data 3\ufe0f\u20e3 finding the best model 4\ufe0f\u20e3 training that model 5\ufe0f\u20e3 and beyond, actually build the product\u2757 Most current AutoML frameworks today focus on 3\ufe0f\u20e3, i.e., helping you select among the plethora of machine learning models which is the best for your problem. This problem is often framed in terms of: \ud83c\udd70\ufe0f model selection \ud83c\udd71\ufe0f hyperparameter optimization \ud83c\udd70\ufe0f Model selection is about deciding, e.g., if logistic regression, decision trees or SVM is better, or whether to encode with word2vec or TF-IDF. The \"manual\" way of doing this is to actually try each algorithm a bunch of times in your data and collect some statistics. \ud83c\udd71\ufe0f Hyperparameter optimization is about selecting the exact value for each tunable thing in your algorithm. How many neurons? How much dropout? Which activation function? Which regularization factor? ... If you combine both problems, then you realize there are literally thousands (and potentially infinite) different algorithms you can try on your data. If you where to do this yourself, the simplest solution is something like this: \u2b50 Actually, AutoML algorithms are way smarter and faster than random search. \ud83d\udca1 AutoML frames this problem as an optimization loop on top of the training loop and applies a lot of clever optimization tricks. \ud83d\udc49 AutoML frameworks hide away all that complexity behind an interface that looks as if you are training a single model, but it is ultimately doing the search and optimization loop under the hood. Let's see a couple of examples \ud83d\udc47: \u2764\ufe0f Auto-Sklearn is an AutoML framework compatible with scikit-learn. \ud83d\udd17 https://automl.github.io/auto-sklearn/master/ You can basically replace standard scikit-learn code with a generic Auto-Sklearn classifier and suddenly you are evaluating thousands of models: \u2764\ufe0f Auto-Keras is an AutoML framework specifically designed for deep learning with Keras. \ud83d\udd17 https://autokeras.com/ Instead of manually designing a neural network, you can use Auto-Keras predefined \"meta-models\" and it will take care of finding the best architecture: Yeah, I know \ud83e\udd2f! And AutoML is much more than model selection and hyperparameter search. It can also include automating: data preprocessing feature engineering feature selection dataset augmentation model distillation \ud83d\udd11 If you are working on a practical problem today there is no reason not to use AutoML. \ud83d\udd11 Even if you are working on research, AutoML will make you more productive by taking care of the dumb tasks and letting you focus on the important parts. \u2757 However, this is no silver bullet. There are a lot of challenges to make AutoML production-ready. Data cleaning is a major bottleneck still, far from automated. And we need to understand how these methods exacerbate data bias. Finally, if you are feeling adventurous, you can try @auto_goal , an experimental AutoML framework that goes beyond \"standard\" AutoML. Check it out in https://autogoal.github.io ! As usual, if you like this topic, reply in this thread or @ me at any time. Feel free to like \u2764\ufe0f like and \ud83d\udd01 retweet if you think someone else could benefit from knowing this stuff. Read this thread online at https://apiad.net/tweetstorms/technicaltuesday-automl Stay curious \ud83d\udd96 \ud83d\udd17 https://www.automl.org/automl/ \ud83d\udcda https://www.automl.org/book/ \ud83c\udfa5 https://youtu.be/3c0FoQrsJxo \ud83c\udf81 https://github.com/windmaple/awesome-AutoML","title":"Technicaltuesday automl"},{"location":"tweetstorms/theorythursday-algorithm-complexity/","text":"Hey, guess what, today is #TheoryThursday \ud83e\uddd0! A silly excuse I just invented to share with you random bits of theory from some dark corner of Computer Science and make it as beginner-friendly as possible \ud83d\udc47 Today I want to talk about Algorithmic Complexity . To get started, take a look at the following code. How long do you think it will take to run it? Let's make that question more precise. How long do you think it will take to run it in the worst-case scenario? We can see that the code will run slower if: \ud83d\udc49 your computer is older; \ud83d\udc49 the array is longer; or \ud83d\udc49 x happens to be further to back, or not present at all. Can we turn these insights into an actual formula? We will have to get rid of ambiguous stuff like \"old computers\". 1\ufe0f\u20e3 First, let's consider an abstract computer in which all \"atomic\" operations take exactly 1 unit of time. \ud83e\udd14 Defining exactly what is an \"atomic\" operation is far from trivial. For now, assume it's things like arithmetic operations, indexing, invocation. 2\ufe0f\u20e3 Second, we'll count the number of operations with respect to the size of an arbitrary array. We will say something like \"this will cost 2 units of time for each element of the array\". 3\ufe0f\u20e3 Finally, we will consider the worst-case scenario. So we assume, in this example, that the element x is not in the array. More generally, we will always think about the maximum number of operations that could potentially happen. With these ideas in mind, we are ready to define the Algorithm Complexity of this algorithm. Let's count how many operations are performed in each step, assuming our array has length N: Depending on how detailed you want to be counting, you could say we have something like \ud83d\udd253*N+1\ud83d\udd25 operations in the ultimate worst-case scenario. \u2753 Now, why do we care about this? The reason is that we can now compare different algorithms. For example, if your implementation takes \ud83d\udd255*N+3\ud83d\udd25, then it is worse, right? Well, it's not \ud83d\ude1d Here's the deal: we have been assuming that all \"atomic\" operations are equally costly, but this is not true... Hence, it makes no sense to compare my implementation with your implementation by looking at those tiny differences. My 5 * N could be faster than your 3 * N if my \"atomic\" operations are simpler. \ud83d\udca1 We want a complexity measure that smooths away all implementation details. To achieve this, we will take away everything unimportant when N becomes very large. We will consider that: \ud83d\udc49 N+a and N+b are the same; \ud83d\udc49 a N and b N are the same; ... for any finite values a and b. \ud83d\udd11 And instead of saying 3*N+4, we will say the asymptotic algorithmic complexity is O(N). This is called big-O notation. \ud83d\udca1 We call this linear complexity because the number of operations grows linearly with respect to the size of the array. \ud83e\uddd0 Formally, it means that your function's cost is something that is bounded by a linear function. \ud83d\udca1 Intuitively, what this means is that in the long run, small differences like specific operations matter less than the capacity your algorithm has to scale with more data. The reason is simple, an algorithm with a lower asymptotic complexity will eventually win. Take for example binary search. https://en.wikipedia.org/wiki/Binary_search_algorithm It takes a bit of thinking, but we can prove the asymptotic notation to be O(log N). Binary search is doing much more work in each iteration than linear search. It could be 20 * log N vs 3 * N. Hence, with very small arrays, linear search could be better. \ud83d\udd11 But there is always a value of N after which binary search will win, and in any hardware. \u2764\ufe0f And that's it. We have just arrived at the intuitive notion of asymptotic complexity! Calculating it can be daunting for some non-trivial algorithms, but here are some tips for estimating it: 1\ufe0f\u20e3 Every nested for loop from beginning to end usually means another exponent. For example, two nested loops usually mean O(N^2), three nested loops, O(N^3), and four nested loops means you really need to take a break and, afterward, please refactor that code. 2\ufe0f\u20e3 An invocation to function F inside a loop means you have to multiply N times the complexity of F. For example, if we call binary search for each element of the array, the resulting algorithm is O(N log N) 3\ufe0f\u20e3 In recursive methods, if you split at the middle and recurse down only one branch, that's O(log N). If you recurse down both branches, you usually have O(N log N). These are special cases of a more general rule for recursive methods: https://en.wikipedia.org/wiki/Master_theorem_(analysis_of_algorithms) Finally, we have just scratched the surface in this thread. Algorithmic complexity is a fascinating topic that touches all fields in Computer Science. The most important problem in all of CS comes from here, the infamous \ud83d\udd25P vs NP\ud83d\udd25. But that's a story for another Thursday \ud83d\ude09. \ud83d\udde8\ufe0f If you like this idea, then get into the conversation! Steal this #TheoryThursday hashtag an tell me about your favourite piece of dark magic. \ud83d\udd14 Just @ me and I'll make sure to weigh in. \ud83d\uddd2\ufe0f Here is the full thread source: https://apiad.net/tweetstorms/theorythursday-algorithm-complexity/ You can see this tweetstorm as originally posted in this Twitter thread Hey, guess what, today is #TheoryThursday \ud83e\uddd0! A silly excuse I just invented to share with you random bits of theory from some dark corner of Computer Science and make it as beginner-friendly as possible \ud83d\udc47 \u2014 Alejandro Piad-Morffis (@AlejandroPiad) September 17, 2020","title":"Algorithm Complexity"}]}